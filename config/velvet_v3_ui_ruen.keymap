#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 10>,
                <&to_ru>,
                <&macro_wait_time 10>;

            label = "EN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp Q  &kp W     &kp E      &kp R     &kp T                        &kp Y  &kp U           &kp I      &kp O     &kp P     &kp BSPC
&kp TAB    &kp A  &kp S     &kp D      &kp F     &kp G                        &kp H  &kp J           &kp K      &kp L     &kp SEMI  &kp BSLH
&kp LSHFT  &kp Z  &kp X     &kp C      &kp V     &kp B                        &kp N  &kp M           &kp COMMA  &kp DOT   &kp SQT   &kp RSHFT
                  &kp LALT  &kp LCTRL  &kp LGUI  &mo 2  &kp SPACE    &kp RET  &mo 3  &cap_sen 6 MB1  &kp LBKT   &kp RBKT
            >;

            display-name = "en";
        };

        ru {
            display-name = "ru";
            bindings = <
&kp ESC    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                        &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA        &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp BSPC
&kp TAB    &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                        &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL         &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_HA
&kp LSHFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                         &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE         &kp RU_CYRILLIC_YU     &kp RU_CYRILLIC_E    &kp RSHFT
                                    &kp LALT              &kp LCTRL           &kp LGUI            &mo 2               &kp SPACE    &kp RET  &mo 4               &cap_sen 6 MB1             &kp RU_CYRILLIC_HARD_SIGN  &kp BSLH
            >;
        };

        nav {
            bindings = <
&trans         &kp N1  &kp N2             &kp N3             &kp N4         &kp N5                     &kp N6        &kp N7        &kp N8         &kp N9         &kp N0  &trans
&kp LG(SPACE)  &trans  &kp LG(BACKSPACE)  &kp LA(BACKSPACE)  &kp LEFT_ALT   &kp RET                    &kp LEFT      &kp DOWN      &kp UP         &kp RIGHT      &trans  &trans
&trans         &trans  &kp HOME           &kp INS            &kp LC(SPACE)  &kp DEL                    &kp LG(LEFT)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(RIGHT)  &trans  &trans
                       &trans             &trans             &trans         &trans   &trans    &trans  &mo 5         &trans        &trans         &trans
            >;

            display-name = "nav";
        };

        sym {
            bindings = <
&trans  &trans    &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                      &kp COLON  &kp LBKT  &kp UNDER  &kp RBKT      &kp SQT   &trans
&trans  &trans    &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                       &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC      &kp EXCL  &kp COMMA
&trans  &kp AMPS  &kp STAR  &kp CARET  &kp DOT   &kp DLLR                       &kp DQT    &kp PIPE  &kp TILDE  &kp QUESTION  &kp FSLH  &kp BSLH
                  &trans    &trans     &trans    &mo 5      &kp HASH    &trans  &trans     &trans    &kp AT     &trans
            >;

            display-name = "sym";
        };

        sym_ru {
            display-name = "sym_ru";
            bindings = <
&trans  &trans    &en LT    &kp EQUAL  &en GT      &en GRAVE                      &kp RU_COLON  &en LBKT  &kp UNDER    &en RBKT         &en SQT      &trans
&trans  &trans    &kp LPAR  &kp MINUS  &kp RPAR    &kp PLUS                       &kp PRCNT     &en LBRC  &kp RU_SEMI  &kp RBRC         &kp EXCL     &kp RU_COMMA
&trans  &en AMPS  &kp STAR  &en CARET  &kp RU_DOT  &en DLLR                       &kp RU_DQT    &en PIPE  &en TILDE    &kp RU_QUESTION  &kp RU_FSLH  &kp RU_BACKSLASH
                  &trans    &trans     &trans      &mo 5      &en HASH    &trans  &trans        &trans    &en AT       &trans
            >;
        };

        adj {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4             &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp C_PLAY_PAUSE  &kp C_VOL_UP  &kp LG(LS(KP_NUMBER_4))  &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_MUTE        &kp K_NEXT    &none                    &none
                    &none   &none    &none    &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "adj";
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &mo 7   &mkp MB3  &mkp MB2  &mkp MB1  &mo 8                     &mo 8   &mkp MB1  &mkp MB2  &mkp MB3  &mo 7   &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        sniper {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &mkp MB3  &mkp MB2  &mkp MB1  &trans                    &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans    &trans    &trans    &trans                    &trans  &trans    &trans    &trans    &trans  &trans
                &trans    &trans    &trans    &trans  &trans    &trans  &trans  &trans    &trans    &trans
            >;
        };
    };
};

&trackball_listener {
    input-processors = <&zip_xy_scaler 12 20>;

    scroller {
        layers = <7>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};
